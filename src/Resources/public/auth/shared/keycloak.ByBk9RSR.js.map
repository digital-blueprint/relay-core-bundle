{"version":3,"file":"keycloak.ByBk9RSR.js","names":["config","promise"],"sources":["../../../auth/node_modules/keycloak-js/lib/keycloak.js"],"sourcesContent":["/*\n * Copyright 2016 Red Hat, Inc. and/or its affiliates\n * and other contributors as indicated by the @author tags.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction Keycloak (config) {\n    if (!(this instanceof Keycloak)) {\n        throw new Error(\"The 'Keycloak' constructor must be invoked with 'new'.\")\n    }\n\n    if (typeof config !== 'string' && !isObject(config)) {\n        throw new Error(\"The 'Keycloak' constructor must be provided with a configuration object, or a URL to a JSON configuration file.\");\n    }\n\n    if (isObject(config)) {\n        const requiredProperties = 'oidcProvider' in config\n            ? ['clientId']\n            : ['url', 'realm', 'clientId'];\n\n        for (const property of requiredProperties) {\n            if (!config[property]) {\n                throw new Error(`The configuration object is missing the required '${property}' property.`);\n            }\n        }\n    }\n\n    var kc = this;\n    var adapter;\n    var refreshQueue = [];\n    var callbackStorage;\n\n    var loginIframe = {\n        enable: true,\n        callbackList: [],\n        interval: 5\n    };\n\n    kc.didInitialize = false;\n\n    var useNonce = true;\n    var logInfo = createLogger(console.info);\n    var logWarn = createLogger(console.warn);\n\n    if (!globalThis.isSecureContext) {\n        logWarn(\n            \"[KEYCLOAK] Keycloak JS must be used in a 'secure context' to function properly as it relies on browser APIs that are otherwise not available.\\n\" +\n            \"Continuing to run your application insecurely will lead to unexpected behavior and breakage.\\n\\n\" +\n            \"For more information see: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\"\n        );\n    }\n\n    kc.init = function (initOptions = {}) {\n        if (kc.didInitialize) {\n            throw new Error(\"A 'Keycloak' instance can only be initialized once.\");\n        }\n\n        kc.didInitialize = true;\n\n        kc.authenticated = false;\n\n        callbackStorage = createCallbackStorage();\n        var adapters = ['default', 'cordova', 'cordova-native'];\n\n        if (adapters.indexOf(initOptions.adapter) > -1) {\n            adapter = loadAdapter(initOptions.adapter);\n        } else if (typeof initOptions.adapter === \"object\") {\n            adapter = initOptions.adapter;\n        } else {\n            if (window.Cordova || window.cordova) {\n                adapter = loadAdapter('cordova');\n            } else {\n                adapter = loadAdapter();\n            }\n        }\n\n        if (typeof initOptions.useNonce !== 'undefined') {\n            useNonce = initOptions.useNonce;\n        }\n\n        if (typeof initOptions.checkLoginIframe !== 'undefined') {\n            loginIframe.enable = initOptions.checkLoginIframe;\n        }\n\n        if (initOptions.checkLoginIframeInterval) {\n            loginIframe.interval = initOptions.checkLoginIframeInterval;\n        }\n\n        if (initOptions.onLoad === 'login-required') {\n            kc.loginRequired = true;\n        }\n\n        if (initOptions.responseMode) {\n            if (initOptions.responseMode === 'query' || initOptions.responseMode === 'fragment') {\n                kc.responseMode = initOptions.responseMode;\n            } else {\n                throw 'Invalid value for responseMode';\n            }\n        }\n\n        if (initOptions.flow) {\n            switch (initOptions.flow) {\n                case 'standard':\n                    kc.responseType = 'code';\n                    break;\n                case 'implicit':\n                    kc.responseType = 'id_token token';\n                    break;\n                case 'hybrid':\n                    kc.responseType = 'code id_token token';\n                    break;\n                default:\n                    throw 'Invalid value for flow';\n            }\n            kc.flow = initOptions.flow;\n        }\n\n        if (initOptions.timeSkew != null) {\n            kc.timeSkew = initOptions.timeSkew;\n        }\n\n        if(initOptions.redirectUri) {\n            kc.redirectUri = initOptions.redirectUri;\n        }\n\n        if (initOptions.silentCheckSsoRedirectUri) {\n            kc.silentCheckSsoRedirectUri = initOptions.silentCheckSsoRedirectUri;\n        }\n\n        if (typeof initOptions.silentCheckSsoFallback === 'boolean') {\n            kc.silentCheckSsoFallback = initOptions.silentCheckSsoFallback;\n        } else {\n            kc.silentCheckSsoFallback = true;\n        }\n\n        if (typeof initOptions.pkceMethod !== \"undefined\") {\n            if (initOptions.pkceMethod !== \"S256\" && initOptions.pkceMethod !== false) {\n                throw new TypeError(`Invalid value for pkceMethod', expected 'S256' or false but got ${initOptions.pkceMethod}.`);\n            }\n\n            kc.pkceMethod = initOptions.pkceMethod;\n        } else {\n            kc.pkceMethod = \"S256\";\n        }\n\n        if (typeof initOptions.enableLogging === 'boolean') {\n            kc.enableLogging = initOptions.enableLogging;\n        } else {\n            kc.enableLogging = false;\n        }\n\n        if (initOptions.logoutMethod === 'POST') {\n            kc.logoutMethod = 'POST';\n        } else {\n            kc.logoutMethod = 'GET';\n        }\n\n        if (typeof initOptions.scope === 'string') {\n            kc.scope = initOptions.scope;\n        }\n\n        if (typeof initOptions.acrValues === 'string') {\n            kc.acrValues = initOptions.acrValues;\n        }\n\n        if (typeof initOptions.messageReceiveTimeout === 'number' && initOptions.messageReceiveTimeout > 0) {\n            kc.messageReceiveTimeout = initOptions.messageReceiveTimeout;\n        } else {\n            kc.messageReceiveTimeout = 10000;\n        }\n\n        if (!kc.responseMode) {\n            kc.responseMode = 'fragment';\n        }\n        if (!kc.responseType) {\n            kc.responseType = 'code';\n            kc.flow = 'standard';\n        }\n\n        var promise = createPromise();\n\n        var initPromise = createPromise();\n        initPromise.promise.then(function() {\n            kc.onReady && kc.onReady(kc.authenticated);\n            promise.setSuccess(kc.authenticated);\n        }).catch(function(error) {\n            promise.setError(error);\n        });\n\n        var configPromise = loadConfig();\n\n        function onLoad() {\n            var doLogin = function(prompt) {\n                if (!prompt) {\n                    options.prompt = 'none';\n                }\n\n                if (initOptions.locale) {\n                    options.locale = initOptions.locale;\n                }\n                kc.login(options).then(function () {\n                    initPromise.setSuccess();\n                }).catch(function (error) {\n                    initPromise.setError(error);\n                });\n            }\n\n            var checkSsoSilently = async function() {\n                var ifrm = document.createElement(\"iframe\");\n                var src = await kc.createLoginUrl({prompt: 'none', redirectUri: kc.silentCheckSsoRedirectUri});\n                ifrm.setAttribute(\"src\", src);\n                ifrm.setAttribute(\"sandbox\", \"allow-storage-access-by-user-activation allow-scripts allow-same-origin\");\n                ifrm.setAttribute(\"title\", \"keycloak-silent-check-sso\");\n                ifrm.style.display = \"none\";\n                document.body.appendChild(ifrm);\n\n                var messageCallback = function(event) {\n                    if (event.origin !== window.location.origin || ifrm.contentWindow !== event.source) {\n                        return;\n                    }\n\n                    var oauth = parseCallback(event.data);\n                    processCallback(oauth, initPromise);\n\n                    document.body.removeChild(ifrm);\n                    window.removeEventListener(\"message\", messageCallback);\n                };\n\n                window.addEventListener(\"message\", messageCallback);\n            };\n\n            var options = {};\n            switch (initOptions.onLoad) {\n                case 'check-sso':\n                    if (loginIframe.enable) {\n                        setupCheckLoginIframe().then(function() {\n                            checkLoginIframe().then(function (unchanged) {\n                                if (!unchanged) {\n                                    kc.silentCheckSsoRedirectUri ? checkSsoSilently() : doLogin(false);\n                                } else {\n                                    initPromise.setSuccess();\n                                }\n                            }).catch(function (error) {\n                                initPromise.setError(error);\n                            });\n                        });\n                    } else {\n                        kc.silentCheckSsoRedirectUri ? checkSsoSilently() : doLogin(false);\n                    }\n                    break;\n                case 'login-required':\n                    doLogin(true);\n                    break;\n                default:\n                    throw 'Invalid value for onLoad';\n            }\n        }\n\n        function processInit() {\n            var callback = parseCallback(window.location.href);\n\n            if (callback) {\n                window.history.replaceState(window.history.state, null, callback.newUrl);\n            }\n\n            if (callback && callback.valid) {\n                return setupCheckLoginIframe().then(function() {\n                    processCallback(callback, initPromise);\n                }).catch(function (error) {\n                    initPromise.setError(error);\n                });\n            }\n\n            if (initOptions.token && initOptions.refreshToken) {\n                setToken(initOptions.token, initOptions.refreshToken, initOptions.idToken);\n\n                if (loginIframe.enable) {\n                    setupCheckLoginIframe().then(function() {\n                        checkLoginIframe().then(function (unchanged) {\n                            if (unchanged) {\n                                kc.onAuthSuccess && kc.onAuthSuccess();\n                                initPromise.setSuccess();\n                                scheduleCheckIframe();\n                            } else {\n                                initPromise.setSuccess();\n                            }\n                        }).catch(function (error) {\n                            initPromise.setError(error);\n                        });\n                    });\n                } else {\n                    kc.updateToken(-1).then(function() {\n                        kc.onAuthSuccess && kc.onAuthSuccess();\n                        initPromise.setSuccess();\n                    }).catch(function(error) {\n                        kc.onAuthError && kc.onAuthError();\n                        if (initOptions.onLoad) {\n                            onLoad();\n                        } else {\n                            initPromise.setError(error);\n                        }\n                    });\n                }\n            } else if (initOptions.onLoad) {\n                onLoad();\n            } else {\n                initPromise.setSuccess();\n            }\n        }\n\n        configPromise.then(function () {\n            check3pCookiesSupported()\n                .then(processInit)\n                .catch(function (error) {\n                    promise.setError(error);\n                });\n        });\n        configPromise.catch(function (error) {\n            promise.setError(error);\n        });\n\n        return promise.promise;\n    }\n\n    kc.login = function (options) {\n        return adapter.login(options);\n    }\n\n    function generateRandomData(len) {\n        if (typeof crypto === \"undefined\" || typeof crypto.getRandomValues === \"undefined\") {\n            throw new Error(\"Web Crypto API is not available.\");\n        }\n\n        return crypto.getRandomValues(new Uint8Array(len));\n    }\n\n    function generateCodeVerifier(len) {\n        return generateRandomString(len, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');\n    }\n\n    function generateRandomString(len, alphabet){\n        var randomData = generateRandomData(len);\n        var chars = new Array(len);\n        for (var i = 0; i < len; i++) {\n            chars[i] = alphabet.charCodeAt(randomData[i] % alphabet.length);\n        }\n        return String.fromCharCode.apply(null, chars);\n    }\n\n    async function generatePkceChallenge(pkceMethod, codeVerifier) {\n        if (pkceMethod !== \"S256\") {\n            throw new TypeError(`Invalid value for 'pkceMethod', expected 'S256' but got '${pkceMethod}'.`);\n        }\n\n        // hash codeVerifier, then encode as url-safe base64 without padding\n        const hashBytes = new Uint8Array(await sha256Digest(codeVerifier));\n        const encodedHash = bytesToBase64(hashBytes)\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/\\=/g, '');\n\n        return encodedHash;\n    }\n\n    function buildClaimsParameter(requestedAcr){\n        var claims = {\n            id_token: {\n                acr: requestedAcr\n            }\n        }\n        return JSON.stringify(claims);\n    }\n\n    kc.createLoginUrl = async function(options) {\n        var state = createUUID();\n        var nonce = createUUID();\n\n        var redirectUri = adapter.redirectUri(options);\n\n        var callbackState = {\n            state: state,\n            nonce: nonce,\n            redirectUri: encodeURIComponent(redirectUri),\n            loginOptions: options\n        };\n\n        if (options && options.prompt) {\n            callbackState.prompt = options.prompt;\n        }\n\n        var baseUrl;\n        if (options && options.action == 'register') {\n            baseUrl = kc.endpoints.register();\n        } else {\n            baseUrl = kc.endpoints.authorize();\n        }\n\n        var scope = options && options.scope || kc.scope;\n        if (!scope) {\n            // if scope is not set, default to \"openid\"\n            scope = \"openid\";\n        } else if (scope.indexOf(\"openid\") === -1) {\n            // if openid scope is missing, prefix the given scopes with it\n            scope = \"openid \" + scope;\n        }\n\n        var url = baseUrl\n            + '?client_id=' + encodeURIComponent(kc.clientId)\n            + '&redirect_uri=' + encodeURIComponent(redirectUri)\n            + '&state=' + encodeURIComponent(state)\n            + '&response_mode=' + encodeURIComponent(kc.responseMode)\n            + '&response_type=' + encodeURIComponent(kc.responseType)\n            + '&scope=' + encodeURIComponent(scope);\n        if (useNonce) {\n            url = url + '&nonce=' + encodeURIComponent(nonce);\n        }\n\n        if (options && options.prompt) {\n            url += '&prompt=' + encodeURIComponent(options.prompt);\n        }\n\n        if (options && typeof options.maxAge === 'number') {\n            url += '&max_age=' + encodeURIComponent(options.maxAge);\n        }\n\n        if (options && options.loginHint) {\n            url += '&login_hint=' + encodeURIComponent(options.loginHint);\n        }\n\n        if (options && options.idpHint) {\n            url += '&kc_idp_hint=' + encodeURIComponent(options.idpHint);\n        }\n\n        if (options && options.action && options.action != 'register') {\n            url += '&kc_action=' + encodeURIComponent(options.action);\n        }\n\n        if (options && options.locale) {\n            url += '&ui_locales=' + encodeURIComponent(options.locale);\n        }\n\n        if (options && options.acr) {\n            var claimsParameter = buildClaimsParameter(options.acr);\n            url += '&claims=' + encodeURIComponent(claimsParameter);\n        }\n\n        if ((options && options.acrValues) || kc.acrValues) {\n            url += '&acr_values=' + encodeURIComponent(options.acrValues || kc.acrValues);\n        }\n\n        if (kc.pkceMethod) {\n            try {\n                const codeVerifier = generateCodeVerifier(96);\n                const pkceChallenge = await generatePkceChallenge(kc.pkceMethod, codeVerifier);\n\n                callbackState.pkceCodeVerifier = codeVerifier;\n\n                url += '&code_challenge=' + pkceChallenge;\n                url += '&code_challenge_method=' + kc.pkceMethod;\n            } catch (error) {\n                throw new Error(\"Failed to generate PKCE challenge.\", { cause: error });\n            }\n        }\n\n        callbackStorage.add(callbackState);\n\n        return url;\n    }\n\n    kc.logout = function(options) {\n        return adapter.logout(options);\n    }\n\n    kc.createLogoutUrl = function(options) {\n\n        const logoutMethod = options?.logoutMethod ?? kc.logoutMethod;\n        if (logoutMethod === 'POST') {\n            return kc.endpoints.logout();\n        }\n\n        var url = kc.endpoints.logout()\n            + '?client_id=' + encodeURIComponent(kc.clientId)\n            + '&post_logout_redirect_uri=' + encodeURIComponent(adapter.redirectUri(options, false));\n\n        if (kc.idToken) {\n            url += '&id_token_hint=' + encodeURIComponent(kc.idToken);\n        }\n\n        return url;\n    }\n\n    kc.register = function (options) {\n        return adapter.register(options);\n    }\n\n    kc.createRegisterUrl = async function(options) {\n        if (!options) {\n            options = {};\n        }\n        options.action = 'register';\n        return await kc.createLoginUrl(options);\n    }\n\n    kc.createAccountUrl = function(options) {\n        var realm = getRealmUrl();\n        var url = undefined;\n        if (typeof realm !== 'undefined') {\n            url = realm\n            + '/account'\n            + '?referrer=' + encodeURIComponent(kc.clientId)\n            + '&referrer_uri=' + encodeURIComponent(adapter.redirectUri(options));\n        }\n        return url;\n    }\n\n    kc.accountManagement = function() {\n        return adapter.accountManagement();\n    }\n\n    kc.hasRealmRole = function (role) {\n        var access = kc.realmAccess;\n        return !!access && access.roles.indexOf(role) >= 0;\n    }\n\n    kc.hasResourceRole = function(role, resource) {\n        if (!kc.resourceAccess) {\n            return false;\n        }\n\n        var access = kc.resourceAccess[resource || kc.clientId];\n        return !!access && access.roles.indexOf(role) >= 0;\n    }\n\n    kc.loadUserProfile = function() {\n        var url = getRealmUrl() + '/account';\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n        req.setRequestHeader('Accept', 'application/json');\n        req.setRequestHeader('Authorization', 'bearer ' + kc.token);\n\n        var promise = createPromise();\n\n        req.onreadystatechange = function () {\n            if (req.readyState == 4) {\n                if (req.status == 200) {\n                    kc.profile = JSON.parse(req.responseText);\n                    promise.setSuccess(kc.profile);\n                } else {\n                    promise.setError();\n                }\n            }\n        }\n\n        req.send();\n\n        return promise.promise;\n    }\n\n    kc.loadUserInfo = function() {\n        var url = kc.endpoints.userinfo();\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n        req.setRequestHeader('Accept', 'application/json');\n        req.setRequestHeader('Authorization', 'bearer ' + kc.token);\n\n        var promise = createPromise();\n\n        req.onreadystatechange = function () {\n            if (req.readyState == 4) {\n                if (req.status == 200) {\n                    kc.userInfo = JSON.parse(req.responseText);\n                    promise.setSuccess(kc.userInfo);\n                } else {\n                    promise.setError();\n                }\n            }\n        }\n\n        req.send();\n\n        return promise.promise;\n    }\n\n    kc.isTokenExpired = function(minValidity) {\n        if (!kc.tokenParsed || (!kc.refreshToken && kc.flow != 'implicit' )) {\n            throw 'Not authenticated';\n        }\n\n        if (kc.timeSkew == null) {\n            logInfo('[KEYCLOAK] Unable to determine if token is expired as timeskew is not set');\n            return true;\n        }\n\n        var expiresIn = kc.tokenParsed['exp'] - Math.ceil(new Date().getTime() / 1000) + kc.timeSkew;\n        if (minValidity) {\n            if (isNaN(minValidity)) {\n                throw 'Invalid minValidity';\n            }\n            expiresIn -= minValidity;\n        }\n        return expiresIn < 0;\n    }\n\n    kc.updateToken = function(minValidity) {\n        var promise = createPromise();\n\n        if (!kc.refreshToken) {\n            promise.setError();\n            return promise.promise;\n        }\n\n        minValidity = minValidity || 5;\n\n        var exec = function() {\n            var refreshToken = false;\n            if (minValidity == -1) {\n                refreshToken = true;\n                logInfo('[KEYCLOAK] Refreshing token: forced refresh');\n            } else if (!kc.tokenParsed || kc.isTokenExpired(minValidity)) {\n                refreshToken = true;\n                logInfo('[KEYCLOAK] Refreshing token: token expired');\n            }\n\n            if (!refreshToken) {\n                promise.setSuccess(false);\n            } else {\n                var params = 'grant_type=refresh_token&' + 'refresh_token=' + kc.refreshToken;\n                var url = kc.endpoints.token();\n\n                refreshQueue.push(promise);\n\n                if (refreshQueue.length == 1) {\n                    var req = new XMLHttpRequest();\n                    req.open('POST', url, true);\n                    req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n                    req.withCredentials = true;\n\n                    params += '&client_id=' + encodeURIComponent(kc.clientId);\n\n                    var timeLocal = new Date().getTime();\n\n                    req.onreadystatechange = function () {\n                        if (req.readyState == 4) {\n                            if (req.status == 200) {\n                                logInfo('[KEYCLOAK] Token refreshed');\n\n                                timeLocal = (timeLocal + new Date().getTime()) / 2;\n\n                                var tokenResponse = JSON.parse(req.responseText);\n\n                                setToken(tokenResponse['access_token'], tokenResponse['refresh_token'], tokenResponse['id_token'], timeLocal);\n\n                                kc.onAuthRefreshSuccess && kc.onAuthRefreshSuccess();\n                                for (var p = refreshQueue.pop(); p != null; p = refreshQueue.pop()) {\n                                    p.setSuccess(true);\n                                }\n                            } else {\n                                logWarn('[KEYCLOAK] Failed to refresh token');\n\n                                if (req.status == 400) {\n                                    kc.clearToken();\n                                }\n\n                                kc.onAuthRefreshError && kc.onAuthRefreshError();\n                                for (var p = refreshQueue.pop(); p != null; p = refreshQueue.pop()) {\n                                    p.setError(\"Failed to refresh token: An unexpected HTTP error occurred while attempting to refresh the token.\");\n                                }\n                            }\n                        }\n                    };\n\n                    req.send(params);\n                }\n            }\n        }\n\n        if (loginIframe.enable) {\n            var iframePromise = checkLoginIframe();\n            iframePromise.then(function() {\n                exec();\n            }).catch(function(error) {\n                promise.setError(error);\n            });\n        } else {\n            exec();\n        }\n\n        return promise.promise;\n    }\n\n    kc.clearToken = function() {\n        if (kc.token) {\n            setToken(null, null, null);\n            kc.onAuthLogout && kc.onAuthLogout();\n            if (kc.loginRequired) {\n                kc.login();\n            }\n        }\n    }\n\n    function getRealmUrl() {\n        if (typeof kc.authServerUrl !== 'undefined') {\n            if (kc.authServerUrl.charAt(kc.authServerUrl.length - 1) == '/') {\n                return kc.authServerUrl + 'realms/' + encodeURIComponent(kc.realm);\n            } else {\n                return kc.authServerUrl + '/realms/' + encodeURIComponent(kc.realm);\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    function getOrigin() {\n        if (!window.location.origin) {\n            return window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\n        } else {\n            return window.location.origin;\n        }\n    }\n\n    function processCallback(oauth, promise) {\n        var code = oauth.code;\n        var error = oauth.error;\n        var prompt = oauth.prompt;\n\n        var timeLocal = new Date().getTime();\n\n        if (oauth['kc_action_status']) {\n            kc.onActionUpdate && kc.onActionUpdate(oauth['kc_action_status'], oauth['kc_action']);\n        }\n\n        if (error) {\n            if (prompt != 'none') {\n                if (oauth.error_description && oauth.error_description === \"authentication_expired\") {\n                    kc.login(oauth.loginOptions);\n                } else {\n                    var errorData = { error: error, error_description: oauth.error_description };\n                    kc.onAuthError && kc.onAuthError(errorData);\n                    promise && promise.setError(errorData);\n                }\n            } else {\n                promise && promise.setSuccess();\n            }\n            return;\n        } else if ((kc.flow != 'standard') && (oauth.access_token || oauth.id_token)) {\n            authSuccess(oauth.access_token, null, oauth.id_token, true);\n        }\n\n        if ((kc.flow != 'implicit') && code) {\n            var params = 'code=' + code + '&grant_type=authorization_code';\n            var url = kc.endpoints.token();\n\n            var req = new XMLHttpRequest();\n            req.open('POST', url, true);\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n            params += '&client_id=' + encodeURIComponent(kc.clientId);\n            params += '&redirect_uri=' + oauth.redirectUri;\n\n            if (oauth.pkceCodeVerifier) {\n                params += '&code_verifier=' + oauth.pkceCodeVerifier;\n            }\n\n            req.withCredentials = true;\n\n            req.onreadystatechange = function() {\n                if (req.readyState == 4) {\n                    if (req.status == 200) {\n\n                        var tokenResponse = JSON.parse(req.responseText);\n                        authSuccess(tokenResponse['access_token'], tokenResponse['refresh_token'], tokenResponse['id_token'], kc.flow === 'standard');\n                        scheduleCheckIframe();\n                    } else {\n                        kc.onAuthError && kc.onAuthError();\n                        promise && promise.setError();\n                    }\n                }\n            };\n\n            req.send(params);\n        }\n\n        function authSuccess(accessToken, refreshToken, idToken, fulfillPromise) {\n            timeLocal = (timeLocal + new Date().getTime()) / 2;\n\n            setToken(accessToken, refreshToken, idToken, timeLocal);\n\n            if (useNonce && (kc.idTokenParsed && kc.idTokenParsed.nonce != oauth.storedNonce)) {\n                logInfo('[KEYCLOAK] Invalid nonce, clearing token');\n                kc.clearToken();\n                promise && promise.setError();\n            } else {\n                if (fulfillPromise) {\n                    kc.onAuthSuccess && kc.onAuthSuccess();\n                    promise && promise.setSuccess();\n                }\n            }\n        }\n\n    }\n\n    function loadConfig() {\n        var promise = createPromise();\n        var configUrl;\n\n        if (typeof config === 'string') {\n            configUrl = config;\n        }\n\n        function setupOidcEndoints(oidcConfiguration) {\n            if (! oidcConfiguration) {\n                kc.endpoints = {\n                    authorize: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/auth';\n                    },\n                    token: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/token';\n                    },\n                    logout: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/logout';\n                    },\n                    checkSessionIframe: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/login-status-iframe.html';\n                    },\n                    thirdPartyCookiesIframe: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/3p-cookies/step1.html';\n                    },\n                    register: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/registrations';\n                    },\n                    userinfo: function() {\n                        return getRealmUrl() + '/protocol/openid-connect/userinfo';\n                    }\n                };\n            } else {\n                kc.endpoints = {\n                    authorize: function() {\n                        return oidcConfiguration.authorization_endpoint;\n                    },\n                    token: function() {\n                        return oidcConfiguration.token_endpoint;\n                    },\n                    logout: function() {\n                        if (!oidcConfiguration.end_session_endpoint) {\n                            throw \"Not supported by the OIDC server\";\n                        }\n                        return oidcConfiguration.end_session_endpoint;\n                    },\n                    checkSessionIframe: function() {\n                        if (!oidcConfiguration.check_session_iframe) {\n                            throw \"Not supported by the OIDC server\";\n                        }\n                        return oidcConfiguration.check_session_iframe;\n                    },\n                    register: function() {\n                        throw 'Redirection to \"Register user\" page not supported in standard OIDC mode';\n                    },\n                    userinfo: function() {\n                        if (!oidcConfiguration.userinfo_endpoint) {\n                            throw \"Not supported by the OIDC server\";\n                        }\n                        return oidcConfiguration.userinfo_endpoint;\n                    }\n                }\n            }\n        }\n\n        if (configUrl) {\n            var req = new XMLHttpRequest();\n            req.open('GET', configUrl, true);\n            req.setRequestHeader('Accept', 'application/json');\n\n            req.onreadystatechange = function () {\n                if (req.readyState == 4) {\n                    if (req.status == 200 || fileLoaded(req)) {\n                        var config = JSON.parse(req.responseText);\n\n                        kc.authServerUrl = config['auth-server-url'];\n                        kc.realm = config['realm'];\n                        kc.clientId = config['resource'];\n                        setupOidcEndoints(null);\n                        promise.setSuccess();\n                    } else {\n                        promise.setError();\n                    }\n                }\n            };\n\n            req.send();\n        } else {\n            kc.clientId = config.clientId;\n\n            var oidcProvider = config['oidcProvider'];\n            if (!oidcProvider) {\n                kc.authServerUrl = config.url;\n                kc.realm = config.realm;\n                setupOidcEndoints(null);\n                promise.setSuccess();\n            } else {\n                if (typeof oidcProvider === 'string') {\n                    var oidcProviderConfigUrl;\n                    if (oidcProvider.charAt(oidcProvider.length - 1) == '/') {\n                        oidcProviderConfigUrl = oidcProvider + '.well-known/openid-configuration';\n                    } else {\n                        oidcProviderConfigUrl = oidcProvider + '/.well-known/openid-configuration';\n                    }\n                    var req = new XMLHttpRequest();\n                    req.open('GET', oidcProviderConfigUrl, true);\n                    req.setRequestHeader('Accept', 'application/json');\n\n                    req.onreadystatechange = function () {\n                        if (req.readyState == 4) {\n                            if (req.status == 200 || fileLoaded(req)) {\n                                var oidcProviderConfig = JSON.parse(req.responseText);\n                                setupOidcEndoints(oidcProviderConfig);\n                                promise.setSuccess();\n                            } else {\n                                promise.setError();\n                            }\n                        }\n                    };\n\n                    req.send();\n                } else {\n                    setupOidcEndoints(oidcProvider);\n                    promise.setSuccess();\n                }\n            }\n        }\n\n        return promise.promise;\n    }\n\n    function fileLoaded(xhr) {\n        return xhr.status == 0 && xhr.responseText && xhr.responseURL.startsWith('file:');\n    }\n\n    function setToken(token, refreshToken, idToken, timeLocal) {\n        if (kc.tokenTimeoutHandle) {\n            clearTimeout(kc.tokenTimeoutHandle);\n            kc.tokenTimeoutHandle = null;\n        }\n\n        if (refreshToken) {\n            kc.refreshToken = refreshToken;\n            kc.refreshTokenParsed = decodeToken(refreshToken);\n        } else {\n            delete kc.refreshToken;\n            delete kc.refreshTokenParsed;\n        }\n\n        if (idToken) {\n            kc.idToken = idToken;\n            kc.idTokenParsed = decodeToken(idToken);\n        } else {\n            delete kc.idToken;\n            delete kc.idTokenParsed;\n        }\n\n        if (token) {\n            kc.token = token;\n            kc.tokenParsed = decodeToken(token);\n            kc.sessionId = kc.tokenParsed.sid;\n            kc.authenticated = true;\n            kc.subject = kc.tokenParsed.sub;\n            kc.realmAccess = kc.tokenParsed.realm_access;\n            kc.resourceAccess = kc.tokenParsed.resource_access;\n\n            if (timeLocal) {\n                kc.timeSkew = Math.floor(timeLocal / 1000) - kc.tokenParsed.iat;\n            }\n\n            if (kc.timeSkew != null) {\n                logInfo('[KEYCLOAK] Estimated time difference between browser and server is ' + kc.timeSkew + ' seconds');\n\n                if (kc.onTokenExpired) {\n                    var expiresIn = (kc.tokenParsed['exp'] - (new Date().getTime() / 1000) + kc.timeSkew) * 1000;\n                    logInfo('[KEYCLOAK] Token expires in ' + Math.round(expiresIn / 1000) + ' s');\n                    if (expiresIn <= 0) {\n                        kc.onTokenExpired();\n                    } else {\n                        kc.tokenTimeoutHandle = setTimeout(kc.onTokenExpired, expiresIn);\n                    }\n                }\n            }\n        } else {\n            delete kc.token;\n            delete kc.tokenParsed;\n            delete kc.subject;\n            delete kc.realmAccess;\n            delete kc.resourceAccess;\n\n            kc.authenticated = false;\n        }\n    }\n\n    function createUUID() {\n        if (typeof crypto === \"undefined\" || typeof crypto.randomUUID === \"undefined\") {\n            throw new Error(\"Web Crypto API is not available.\");\n        }\n\n        return crypto.randomUUID();\n    }\n\n    function parseCallback(url) {\n        var oauth = parseCallbackUrl(url);\n        if (!oauth) {\n            return;\n        }\n\n        var oauthState = callbackStorage.get(oauth.state);\n\n        if (oauthState) {\n            oauth.valid = true;\n            oauth.redirectUri = oauthState.redirectUri;\n            oauth.storedNonce = oauthState.nonce;\n            oauth.prompt = oauthState.prompt;\n            oauth.pkceCodeVerifier = oauthState.pkceCodeVerifier;\n            oauth.loginOptions = oauthState.loginOptions;\n        }\n\n        return oauth;\n    }\n\n    function parseCallbackUrl(url) {\n        var supportedParams;\n        switch (kc.flow) {\n            case 'standard':\n                supportedParams = ['code', 'state', 'session_state', 'kc_action_status', 'kc_action', 'iss'];\n                break;\n            case 'implicit':\n                supportedParams = ['access_token', 'token_type', 'id_token', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss'];\n                break;\n            case 'hybrid':\n                supportedParams = ['access_token', 'token_type', 'id_token', 'code', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss'];\n                break;\n        }\n\n        supportedParams.push('error');\n        supportedParams.push('error_description');\n        supportedParams.push('error_uri');\n\n        var queryIndex = url.indexOf('?');\n        var fragmentIndex = url.indexOf('#');\n\n        var newUrl;\n        var parsed;\n\n        if (kc.responseMode === 'query' && queryIndex !== -1) {\n            newUrl = url.substring(0, queryIndex);\n            parsed = parseCallbackParams(url.substring(queryIndex + 1, fragmentIndex !== -1 ? fragmentIndex : url.length), supportedParams);\n            if (parsed.paramsString !== '') {\n                newUrl += '?' + parsed.paramsString;\n            }\n            if (fragmentIndex !== -1) {\n                newUrl += url.substring(fragmentIndex);\n            }\n        } else if (kc.responseMode === 'fragment' && fragmentIndex !== -1) {\n            newUrl = url.substring(0, fragmentIndex);\n            parsed = parseCallbackParams(url.substring(fragmentIndex + 1), supportedParams);\n            if (parsed.paramsString !== '') {\n                newUrl += '#' + parsed.paramsString;\n            }\n        }\n\n        if (parsed && parsed.oauthParams) {\n            if (kc.flow === 'standard' || kc.flow === 'hybrid') {\n                if ((parsed.oauthParams.code || parsed.oauthParams.error) && parsed.oauthParams.state) {\n                    parsed.oauthParams.newUrl = newUrl;\n                    return parsed.oauthParams;\n                }\n            } else if (kc.flow === 'implicit') {\n                if ((parsed.oauthParams.access_token || parsed.oauthParams.error) && parsed.oauthParams.state) {\n                    parsed.oauthParams.newUrl = newUrl;\n                    return parsed.oauthParams;\n                }\n            }\n        }\n    }\n\n    function parseCallbackParams(paramsString, supportedParams) {\n        var p = paramsString.split('&');\n        var result = {\n            paramsString: '',\n            oauthParams: {}\n        }\n        for (var i = 0; i < p.length; i++) {\n            var split = p[i].indexOf(\"=\");\n            var key = p[i].slice(0, split);\n            if (supportedParams.indexOf(key) !== -1) {\n                result.oauthParams[key] = p[i].slice(split + 1);\n            } else {\n                if (result.paramsString !== '') {\n                    result.paramsString += '&';\n                }\n                result.paramsString += p[i];\n            }\n        }\n        return result;\n    }\n\n    function createPromise() {\n        // Need to create a native Promise which also preserves the\n        // interface of the custom promise type previously used by the API\n        var p = {\n            setSuccess: function(result) {\n                p.resolve(result);\n            },\n\n            setError: function(result) {\n                p.reject(result);\n            }\n        };\n        p.promise = new Promise(function(resolve, reject) {\n            p.resolve = resolve;\n            p.reject = reject;\n        });\n\n        return p;\n    }\n\n    // Function to extend existing native Promise with timeout\n    function applyTimeoutToPromise(promise, timeout, errorMessage) {\n        var timeoutHandle = null;\n        var timeoutPromise = new Promise(function (resolve, reject) {\n            timeoutHandle = setTimeout(function () {\n                reject({ \"error\": errorMessage || \"Promise is not settled within timeout of \" + timeout + \"ms\" });\n            }, timeout);\n        });\n\n        return Promise.race([promise, timeoutPromise]).finally(function () {\n            clearTimeout(timeoutHandle);\n        });\n    }\n\n    function setupCheckLoginIframe() {\n        var promise = createPromise();\n\n        if (!loginIframe.enable) {\n            promise.setSuccess();\n            return promise.promise;\n        }\n\n        if (loginIframe.iframe) {\n            promise.setSuccess();\n            return promise.promise;\n        }\n\n        var iframe = document.createElement('iframe');\n        loginIframe.iframe = iframe;\n\n        iframe.onload = function() {\n            var authUrl = kc.endpoints.authorize();\n            if (authUrl.charAt(0) === '/') {\n                loginIframe.iframeOrigin = getOrigin();\n            } else {\n                loginIframe.iframeOrigin = authUrl.substring(0, authUrl.indexOf('/', 8));\n            }\n            promise.setSuccess();\n        }\n\n        var src = kc.endpoints.checkSessionIframe();\n        iframe.setAttribute('src', src );\n        iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n        iframe.setAttribute('title', 'keycloak-session-iframe' );\n        iframe.style.display = 'none';\n        document.body.appendChild(iframe);\n\n        var messageCallback = function(event) {\n            if ((event.origin !== loginIframe.iframeOrigin) || (loginIframe.iframe.contentWindow !== event.source)) {\n                return;\n            }\n\n            if (!(event.data == 'unchanged' || event.data == 'changed' || event.data == 'error')) {\n                return;\n            }\n\n\n            if (event.data != 'unchanged') {\n                kc.clearToken();\n            }\n\n            var callbacks = loginIframe.callbackList.splice(0, loginIframe.callbackList.length);\n\n            for (var i = callbacks.length - 1; i >= 0; --i) {\n                var promise = callbacks[i];\n                if (event.data == 'error') {\n                    promise.setError();\n                } else {\n                    promise.setSuccess(event.data == 'unchanged');\n                }\n            }\n        };\n\n        window.addEventListener('message', messageCallback, false);\n\n        return promise.promise;\n    }\n\n    function scheduleCheckIframe() {\n        if (loginIframe.enable) {\n            if (kc.token) {\n                setTimeout(function() {\n                    checkLoginIframe().then(function(unchanged) {\n                        if (unchanged) {\n                            scheduleCheckIframe();\n                        }\n                    });\n                }, loginIframe.interval * 1000);\n            }\n        }\n    }\n\n    function checkLoginIframe() {\n        var promise = createPromise();\n\n        if (loginIframe.iframe && loginIframe.iframeOrigin ) {\n            var msg = kc.clientId + ' ' + (kc.sessionId ? kc.sessionId : '');\n            loginIframe.callbackList.push(promise);\n            var origin = loginIframe.iframeOrigin;\n            if (loginIframe.callbackList.length == 1) {\n                loginIframe.iframe.contentWindow.postMessage(msg, origin);\n            }\n        } else {\n            promise.setSuccess();\n        }\n\n        return promise.promise;\n    }\n\n    function check3pCookiesSupported() {\n        var promise = createPromise();\n\n        if ((loginIframe.enable || kc.silentCheckSsoRedirectUri) && typeof kc.endpoints.thirdPartyCookiesIframe === 'function') {\n            var iframe = document.createElement('iframe');\n            iframe.setAttribute('src', kc.endpoints.thirdPartyCookiesIframe());\n            iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n            iframe.setAttribute('title', 'keycloak-3p-check-iframe' );\n            iframe.style.display = 'none';\n            document.body.appendChild(iframe);\n\n            var messageCallback = function(event) {\n                if (iframe.contentWindow !== event.source) {\n                    return;\n                }\n\n                if (event.data !== \"supported\" && event.data !== \"unsupported\") {\n                    return;\n                } else if (event.data === \"unsupported\") {\n                    logWarn(\n                        \"[KEYCLOAK] Your browser is blocking access to 3rd-party cookies, this means:\\n\\n\" +\n                        \" - It is not possible to retrieve tokens without redirecting to the Keycloak server (a.k.a. no support for silent authentication).\\n\" +\n                        \" - It is not possible to automatically detect changes to the session status (such as the user logging out in another tab).\\n\\n\" +\n                        \"For more information see: https://www.keycloak.org/securing-apps/javascript-adapter#_modern_browsers\"\n                    );\n\n                    loginIframe.enable = false;\n                    if (kc.silentCheckSsoFallback) {\n                        kc.silentCheckSsoRedirectUri = false;\n                    }\n                }\n\n                document.body.removeChild(iframe);\n                window.removeEventListener(\"message\", messageCallback);\n                promise.setSuccess();\n            };\n\n            window.addEventListener('message', messageCallback, false);\n        } else {\n            promise.setSuccess();\n        }\n\n        return applyTimeoutToPromise(promise.promise, kc.messageReceiveTimeout, \"Timeout when waiting for 3rd party check iframe message.\");\n    }\n\n    function loadAdapter(type) {\n        if (!type || type == 'default') {\n            return {\n                login: async function(options) {\n                    window.location.assign(await kc.createLoginUrl(options));\n                    return createPromise().promise;\n                },\n\n                logout: async function(options) {\n\n                    const logoutMethod = options?.logoutMethod ?? kc.logoutMethod;\n                    if (logoutMethod === \"GET\") {\n                        window.location.replace(kc.createLogoutUrl(options));\n                        return;\n                    }\n\n                    // Create form to send POST request.\n                    const form = document.createElement(\"form\");\n\n                    form.setAttribute(\"method\", \"POST\");\n                    form.setAttribute(\"action\", kc.createLogoutUrl(options));\n                    form.style.display = \"none\";\n\n                    // Add data to form as hidden input fields.\n                    const data = {\n                        id_token_hint: kc.idToken,\n                        client_id: kc.clientId,\n                        post_logout_redirect_uri: adapter.redirectUri(options, false)\n                    };\n\n                    for (const [name, value] of Object.entries(data)) {\n                        const input = document.createElement(\"input\");\n\n                        input.setAttribute(\"type\", \"hidden\");\n                        input.setAttribute(\"name\", name);\n                        input.setAttribute(\"value\", value);\n\n                        form.appendChild(input);\n                    }\n\n                    // Append form to page and submit it to perform logout and redirect.\n                    document.body.appendChild(form);\n                    form.submit();\n                },\n\n                register: async function(options) {\n                    window.location.assign(await kc.createRegisterUrl(options));\n                    return createPromise().promise;\n                },\n\n                accountManagement : function() {\n                    var accountUrl = kc.createAccountUrl();\n                    if (typeof accountUrl !== 'undefined') {\n                        window.location.href = accountUrl;\n                    } else {\n                        throw \"Not supported by the OIDC server\";\n                    }\n                    return createPromise().promise;\n                },\n\n                redirectUri: function(options, encodeHash) {\n                    if (arguments.length == 1) {\n                        encodeHash = true;\n                    }\n\n                    if (options && options.redirectUri) {\n                        return options.redirectUri;\n                    } else if (kc.redirectUri) {\n                        return kc.redirectUri;\n                    } else {\n                        return location.href;\n                    }\n                }\n            };\n        }\n\n        if (type == 'cordova') {\n            loginIframe.enable = false;\n            var cordovaOpenWindowWrapper = function(loginUrl, target, options) {\n                if (window.cordova && window.cordova.InAppBrowser) {\n                    // Use inappbrowser for IOS and Android if available\n                    return window.cordova.InAppBrowser.open(loginUrl, target, options);\n                } else {\n                    return window.open(loginUrl, target, options);\n                }\n            };\n\n            var shallowCloneCordovaOptions = function (userOptions) {\n                if (userOptions && userOptions.cordovaOptions) {\n                    return Object.keys(userOptions.cordovaOptions).reduce(function (options, optionName) {\n                        options[optionName] = userOptions.cordovaOptions[optionName];\n                        return options;\n                    }, {});\n                } else {\n                    return {};\n                }\n            };\n\n            var formatCordovaOptions = function (cordovaOptions) {\n                return Object.keys(cordovaOptions).reduce(function (options, optionName) {\n                    options.push(optionName+\"=\"+cordovaOptions[optionName]);\n                    return options;\n                }, []).join(\",\");\n            };\n\n            var createCordovaOptions = function (userOptions) {\n                var cordovaOptions = shallowCloneCordovaOptions(userOptions);\n                cordovaOptions.location = 'no';\n                if (userOptions && userOptions.prompt == 'none') {\n                    cordovaOptions.hidden = 'yes';\n                }\n                return formatCordovaOptions(cordovaOptions);\n            };\n\n            var getCordovaRedirectUri = function() {\n                return kc.redirectUri || 'http://localhost';\n            }\n\n            return {\n                login: async function(options) {\n                    var promise = createPromise();\n\n                    var cordovaOptions = createCordovaOptions(options);\n                    var loginUrl = await kc.createLoginUrl(options);\n                    var ref = cordovaOpenWindowWrapper(loginUrl, '_blank', cordovaOptions);\n                    var completed = false;\n\n                    var closed = false;\n                    var closeBrowser = function() {\n                        closed = true;\n                        ref.close();\n                    };\n\n                    ref.addEventListener('loadstart', function(event) {\n                        if (event.url.indexOf(getCordovaRedirectUri()) == 0) {\n                            var callback = parseCallback(event.url);\n                            processCallback(callback, promise);\n                            closeBrowser();\n                            completed = true;\n                        }\n                    });\n\n                    ref.addEventListener('loaderror', function(event) {\n                        if (!completed) {\n                            if (event.url.indexOf(getCordovaRedirectUri()) == 0) {\n                                var callback = parseCallback(event.url);\n                                processCallback(callback, promise);\n                                closeBrowser();\n                                completed = true;\n                            } else {\n                                promise.setError();\n                                closeBrowser();\n                            }\n                        }\n                    });\n\n                    ref.addEventListener('exit', function(event) {\n                        if (!closed) {\n                            promise.setError({\n                                reason: \"closed_by_user\"\n                            });\n                        }\n                    });\n\n                    return promise.promise;\n                },\n\n                logout: function(options) {\n                    var promise = createPromise();\n\n                    var logoutUrl = kc.createLogoutUrl(options);\n                    var ref = cordovaOpenWindowWrapper(logoutUrl, '_blank', 'location=no,hidden=yes,clearcache=yes');\n\n                    var error;\n\n                    ref.addEventListener('loadstart', function(event) {\n                        if (event.url.indexOf(getCordovaRedirectUri()) == 0) {\n                            ref.close();\n                        }\n                    });\n\n                    ref.addEventListener('loaderror', function(event) {\n                        if (event.url.indexOf(getCordovaRedirectUri()) == 0) {\n                            ref.close();\n                        } else {\n                            error = true;\n                            ref.close();\n                        }\n                    });\n\n                    ref.addEventListener('exit', function(event) {\n                        if (error) {\n                            promise.setError();\n                        } else {\n                            kc.clearToken();\n                            promise.setSuccess();\n                        }\n                    });\n\n                    return promise.promise;\n                },\n\n                register : async function(options) {\n                    var promise = createPromise();\n                    var registerUrl = await kc.createRegisterUrl();\n                    var cordovaOptions = createCordovaOptions(options);\n                    var ref = cordovaOpenWindowWrapper(registerUrl, '_blank', cordovaOptions);\n                    ref.addEventListener('loadstart', function(event) {\n                        if (event.url.indexOf(getCordovaRedirectUri()) == 0) {\n                            ref.close();\n                            var oauth = parseCallback(event.url);\n                            processCallback(oauth, promise);\n                        }\n                    });\n                    return promise.promise;\n                },\n\n                accountManagement : function() {\n                    var accountUrl = kc.createAccountUrl();\n                    if (typeof accountUrl !== 'undefined') {\n                        var ref = cordovaOpenWindowWrapper(accountUrl, '_blank', 'location=no');\n                        ref.addEventListener('loadstart', function(event) {\n                            if (event.url.indexOf(getCordovaRedirectUri()) == 0) {\n                                ref.close();\n                            }\n                        });\n                    } else {\n                        throw \"Not supported by the OIDC server\";\n                    }\n                },\n\n                redirectUri: function(options) {\n                    return getCordovaRedirectUri();\n                }\n            }\n        }\n\n        if (type == 'cordova-native') {\n            loginIframe.enable = false;\n\n            return {\n                login: async function(options) {\n                    var promise = createPromise();\n                    var loginUrl = await kc.createLoginUrl(options);\n\n                    universalLinks.subscribe('keycloak', function(event) {\n                        universalLinks.unsubscribe('keycloak');\n                        window.cordova.plugins.browsertab.close();\n                        var oauth = parseCallback(event.url);\n                        processCallback(oauth, promise);\n                    });\n\n                    window.cordova.plugins.browsertab.openUrl(loginUrl);\n                    return promise.promise;\n                },\n\n                logout: function(options) {\n                    var promise = createPromise();\n                    var logoutUrl = kc.createLogoutUrl(options);\n\n                    universalLinks.subscribe('keycloak', function(event) {\n                        universalLinks.unsubscribe('keycloak');\n                        window.cordova.plugins.browsertab.close();\n                        kc.clearToken();\n                        promise.setSuccess();\n                    });\n\n                    window.cordova.plugins.browsertab.openUrl(logoutUrl);\n                    return promise.promise;\n                },\n\n                register : async function(options) {\n                    var promise = createPromise();\n                    var registerUrl = await kc.createRegisterUrl(options);\n                    universalLinks.subscribe('keycloak' , function(event) {\n                        universalLinks.unsubscribe('keycloak');\n                        window.cordova.plugins.browsertab.close();\n                        var oauth = parseCallback(event.url);\n                        processCallback(oauth, promise);\n                    });\n                    window.cordova.plugins.browsertab.openUrl(registerUrl);\n                    return promise.promise;\n\n                },\n\n                accountManagement : function() {\n                    var accountUrl = kc.createAccountUrl();\n                    if (typeof accountUrl !== 'undefined') {\n                        window.cordova.plugins.browsertab.openUrl(accountUrl);\n                    } else {\n                        throw \"Not supported by the OIDC server\";\n                    }\n                },\n\n                redirectUri: function(options) {\n                    if (options && options.redirectUri) {\n                        return options.redirectUri;\n                    } else if (kc.redirectUri) {\n                        return kc.redirectUri;\n                    } else {\n                        return \"http://localhost\";\n                    }\n                }\n            }\n        }\n\n        throw 'invalid adapter type: ' + type;\n    }\n\n    const STORAGE_KEY_PREFIX = 'kc-callback-';\n\n    var LocalStorage = function() {\n        if (!(this instanceof LocalStorage)) {\n            return new LocalStorage();\n        }\n\n        localStorage.setItem('kc-test', 'test');\n        localStorage.removeItem('kc-test');\n\n        var cs = this;\n\n        /**\n         * Clears all values from local storage that are no longer valid.\n         */\n        function clearInvalidValues() {\n            const currentTime = Date.now();\n\n            for (const [key, value] of getStoredEntries()) {\n                // Attempt to parse the expiry time from the value.\n                const expiry = parseExpiry(value);\n\n                // Discard the value if it is malformed or expired.\n                if (expiry === null || expiry < currentTime) {\n                    localStorage.removeItem(key);\n                }\n            }\n        }\n\n        /**\n         * Clears all known values from local storage.\n         */\n        function clearAllValues() {\n            for (const [key] of getStoredEntries()) {\n                localStorage.removeItem(key);\n            }\n        }\n\n        /**\n         * Gets all entries stored in local storage that are known to be managed by this class.\n         * @returns {Array<[string, unknown]>} An array of key-value pairs.\n         */\n        function getStoredEntries() {\n            return Object.entries(localStorage).filter(([key]) => key.startsWith(STORAGE_KEY_PREFIX));\n        }\n\n        /**\n         * Parses the expiry time from a value stored in local storage.\n         * @param {unknown} value\n         * @returns {number | null} The expiry time in milliseconds, or `null` if the value is malformed.\n         */\n        function parseExpiry(value) {\n            let parsedValue;\n\n            // Attempt to parse the value as JSON.\n            try {\n                parsedValue = JSON.parse(value);\n            } catch (error) {\n                return null;\n            }\n\n            // Attempt to extract the 'expires' property.\n            if (isObject(parsedValue) && 'expires' in parsedValue && typeof parsedValue.expires === 'number') {\n                return parsedValue.expires;\n            }\n\n            return null;\n        }\n\n        cs.get = function(state) {\n            if (!state) {\n                return;\n            }\n\n            var key = STORAGE_KEY_PREFIX + state;\n            var value = localStorage.getItem(key);\n            if (value) {\n                localStorage.removeItem(key);\n                value = JSON.parse(value);\n            }\n\n            clearInvalidValues();\n            return value;\n        };\n\n        cs.add = function(state) {\n            clearInvalidValues();\n\n            const key = STORAGE_KEY_PREFIX + state.state;\n            const value = JSON.stringify({\n                ...state,\n                // Set the expiry time to 1 hour from now.\n                expires: Date.now() + (60 * 60 * 1000)\n            });\n\n            try {\n                localStorage.setItem(key, value);\n            } catch (error) {\n                // If the storage is full, clear all known values and try again.\n                clearAllValues();\n                localStorage.setItem(key, value);\n            }\n        };\n    };\n\n    var CookieStorage = function() {\n        if (!(this instanceof CookieStorage)) {\n            return new CookieStorage();\n        }\n\n        var cs = this;\n\n        cs.get = function(state) {\n            if (!state) {\n                return;\n            }\n\n            var value = getCookie(STORAGE_KEY_PREFIX + state);\n            setCookie(STORAGE_KEY_PREFIX + state, '', cookieExpiration(-100));\n            if (value) {\n                return JSON.parse(value);\n            }\n        };\n\n        cs.add = function(state) {\n            setCookie(STORAGE_KEY_PREFIX + state.state, JSON.stringify(state), cookieExpiration(60));\n        };\n\n        cs.removeItem = function(key) {\n            setCookie(key, '', cookieExpiration(-100));\n        };\n\n        var cookieExpiration = function (minutes) {\n            var exp = new Date();\n            exp.setTime(exp.getTime() + (minutes*60*1000));\n            return exp;\n        };\n\n        var getCookie = function (key) {\n            var name = key + '=';\n            var ca = document.cookie.split(';');\n            for (var i = 0; i < ca.length; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1);\n                }\n                if (c.indexOf(name) == 0) {\n                    return c.substring(name.length, c.length);\n                }\n            }\n            return '';\n        };\n\n        var setCookie = function (key, value, expirationDate) {\n            var cookie = key + '=' + value + '; '\n                + 'expires=' + expirationDate.toUTCString() + '; ';\n            document.cookie = cookie;\n        }\n    };\n\n    function createCallbackStorage() {\n        try {\n            return new LocalStorage();\n        } catch (err) {\n        }\n\n        return new CookieStorage();\n    }\n\n    function createLogger(fn) {\n        return function() {\n            if (kc.enableLogging) {\n                fn.apply(console, Array.prototype.slice.call(arguments));\n            }\n        };\n    }\n}\n\nexport default Keycloak;\n\n/**\n * @param {ArrayBuffer} bytes\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\nfunction bytesToBase64(bytes) {\n    const binString = String.fromCodePoint(...bytes);\n    return btoa(binString);\n}\n\n/**\n * @param {string} message\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#basic_example\n */\nasync function sha256Digest(message) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(message);\n\n    if (typeof crypto === \"undefined\" || typeof crypto.subtle === \"undefined\") {\n        throw new Error(\"Web Crypto API is not available.\");\n    }\n\n    return await crypto.subtle.digest(\"SHA-256\", data);\n}\n\n/**\n * @param {string} token\n */\nfunction decodeToken(token) {\n    const [header, payload] = token.split(\".\");\n\n    if (typeof payload !== \"string\") {\n        throw new Error(\"Unable to decode token, payload not found.\");\n    }\n\n    let decoded;\n\n    try {\n        decoded = base64UrlDecode(payload);\n    } catch (error) {\n        throw new Error(\"Unable to decode token, payload is not a valid Base64URL value.\", { cause: error });\n    }\n\n    try {\n        return JSON.parse(decoded);\n    } catch (error) {\n        throw new Error(\"Unable to decode token, payload is not a valid JSON value.\", { cause: error });\n    }\n}\n\n/**\n * @param {string} input\n */\nfunction base64UrlDecode(input) {\n    let output = input\n        .replaceAll(\"-\", \"+\")\n        .replaceAll(\"_\", \"/\");\n\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"Input is not of the correct length.\");\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (error) {\n        return atob(output);\n    }\n}\n\n/**\n * @param {string} input\n */\nfunction b64DecodeUnicode(input) {\n    return decodeURIComponent(atob(input).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n\n        return \"%\" + code;\n    }));\n}\n\n/**\n * Check if the input is an object that can be operated on.\n * @param {unknown} input\n */\nfunction isObject(input) {\n    return typeof input === 'object' && input !== null;\n}\n"],"x_google_ignoreList":[0],"mappings":"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"}